#
# A theme based on Steve Losh's Extravagant Prompt with vcs_info integration.
#
# Authors:
#   Steve Losh <steve@stevelosh.com>
#   Bart Trojanowski <bart@jukie.net>
#   Brian Carper <brian@carper.ca>
#   focus <focus@gmail.com>
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# Screenshots:
#   http://i.imgur.com/HyRvv.png
#

### git: Show +N/-N when your local branch is ahead-of or behind remote HEAD.
# Make sure you have added misc to your 'formats':  %m
function +vi-git-aheadbehind() {
    local ahead behind
    local -a gitstatus

    # for git prior to 1.7
    # ahead=$(git rev-list origin/${hook_com[branch]}..HEAD | wc -l)
    ahead=$(git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null | wc -l | sed -e 's/^ *//')
    (( $ahead )) && gitstatus+=( "%B${_prompt_focus_colors[3]}/+${ahead}%f%b" )

    # for git prior to 1.7
    # behind=$(git rev-list HEAD..origin/${hook_com[branch]} | wc -l)
    behind=$(git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null | wc -l | sed -e 's/^ *//')
    (( $behind )) && gitstatus+=( "%B${_prompt_focus_colors[3]}/-${behind}%f%b" )

    hook_com[misc]+=${(j::)gitstatus}
}

function +vi-git-stashes() {
    local -a stashes
    if [[ -s ${hook_com[base]}/.git/refs/stash ]] ; then
        stashes=$(git stash list 2>/dev/null | wc -l | sed -e 's/^ *//')
        hook_com[misc]+="%B${_prompt_focus_colors[1]}/∆${stashes}%f%b"
    fi

    # hook_com[misc]+=${(j::)gitstatus}
}

# hg: Time since last commit
+vi-hg-time-since() {
    local now=`date +%s`
    local last=$now
    if [ -f "$hook_com[base]/.hg/undo.dirstate" ]; then
        local last=`last-modified $hook_com[base]/.hg/undo.dirstate`
    fi
    local since=$(( $now - $last ))
    if [[ $since -lt 3600 ]]; then
        since=$(( $since / 60 ))m
    elif [[ $since -lt 86400 ]]; then
        since=$(( $since / 3600 ))h
    else
        since=$(( $since / 86400 ))d
    fi
    # jam time-since in front of branch
    hook_com[vcs]=$since
}

function prompt_focus_precmd {
  # Check for untracked files or updated submodules since vcs_info does not.
  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    branch_format=" ${_prompt_focus_colors[6]}on%f ${_prompt_focus_colors[5]}%b %f%m%u%c${_prompt_focus_colors[4]}/untracked%f"
  elif [[ -n $(hg status 2> /dev/null) ]]; then
    branch_format=" ${_prompt_focus_colors[6]}on%f ${_prompt_focus_colors[5]}%8.8i %m%u%c%f${_prompt_focus_colors[4]}/unstaged%f"
  else
    branch_format=" ${_prompt_focus_colors[6]}on%f ${_prompt_focus_colors[5]}%8.8i %m%u%c%f"
  fi

  zstyle ':vcs_info:*:prompt:*' formats "${branch_format}"
  vcs_info 'prompt'

  if (( $+functions[python-info] )); then
    python-info
  fi
}

function prompt_focus_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  # Add hook for calling vcs_info before each command.
  add-zsh-hook precmd prompt_focus_precmd

  # Use extended color pallete if available.
  if [[ $TERM = *256color* || $TERM = *rxvt* ]]; then
    _prompt_focus_colors=(
      "%F{81}"  # Turquoise
      "%F{166}" # Orange
      "%F{214}" #
      "%F{160}" # Hotpink
      "%F{229}" # Yellow
      "%F{240}" # Grey
      "%F{118}" # Green
      "%F{257}" # Light Grey
    )
  else
    _prompt_focus_colors=(
      "%F{cyan}"
      "%F{yellow}"
      "%F{magenta}"
      "%F{red}"
      "%F{gold}"
      "%F{grey}"
      "%F{green}"
      "%F{white}"
      "%F{grey}"
    )
  fi

  # Formats:
  #   %b - branchname
  #   %u - unstagedstr (see below)
  #   %c - stagedstr (see below)
  #   %a - action (e.g. rebase-i)
  #   %R - repository path
  #   %S - path in the repository
  local branch_format="(${_prompt_focus_colors[1]}%b%f%u%c)"
  local action_format="(${_prompt_focus_colors[7]}%a%f)"
  local unstaged_format="${_prompt_focus_colors[2]}/unstaged%f"
  local staged_format="${_prompt_focus_colors[7]}/staged%f"

  # Set vcs_info parameters.
  #   zstyle ':vcs_info:*' enable bzr git hg svn
  zstyle ':vcs_info:*' enable git hg

  zstyle ':vcs_info:*:prompt:*' use-simple false
  zstyle ':vcs_info:*:prompt:*' get-bookmarks true
  zstyle ':vcs_info:*:prompt:*' get-revision true
  zstyle ':vcs_info:*:prompt:*' get-mq true
  zstyle ':vcs_info:*:prompt:*' check-for-changes true
  zstyle ':vcs_info:*:prompt:*' unstagedstr "${unstaged_format}"
  zstyle ':vcs_info:*:prompt:*' stagedstr "${staged_format}"
  zstyle ':vcs_info:*:prompt:*' actionformats "${branch_format}:${action_format}"
  zstyle ':vcs_info:*:prompt:*' formats "${branch_format}"
  zstyle ':vcs_info:*:prompt:*' nvcsformats   ""
  zstyle ':vcs_info:git*+set-message:*' hooks git-aheadbehind git-stashes

  # Define prompts.
  PROMPT="
${_prompt_focus_colors[6]}╭─[%W %*]%f ${_prompt_focus_colors[8]}%2d%f"'${vcs_info_msg_0_}'"
${_prompt_focus_colors[6]}╰─$%f "
  RPROMPT=''
}

prompt_focus_setup "$@"

